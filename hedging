import pandas as pd

import numpy as np
import openpyxl
from scipy import stats
import matplotlib.pyplot as plt
#df = pd.read_csv(r"C:\Users\q8606\Desktop\GRADUTUTKIMUKSET\outofsamplehedging.csv", sep=",")
df = pd.read_csv(r"C:\Users\q8606\Desktop\graduscripts\moneynesstest.csv", sep=",")
df = df.sort_values(by = ["A", "Name"])
#print(df)

#print(np.where(df["A"] == 'CALL ESX APR21 5925'))
#df.loc[df["A"] == 'CALL ESX APR21 5925']

df['count'] = (
    df.groupby(["A"])['Name'].transform('nunique'))


#removing options that have TTM < 50
df = df[df["count"] >= 50]

#hedging for ann
#initializing VS parameter
df["VS"] = df["UNDERLYING"] * df["deltaANN"]

#initializing lag parameter
df["lag_deltaANN"] =  df.deltaANN.shift()
df["rank"] = df.groupby("A").Name.transform('cumcount')
df["VC"] = -df["bsprice"]
#df["VB"] = np.where(df["rank"] == 0, -df["VS"] + df["VC"],0)
df["VB"] = -df["VS"] + df["VC"]
df["VB"] =df["VB"].astype(float, errors = 'raise')
df["VBlag"] = df.VB.shift()
df["VB"] = np.where(df["rank"] > 0, (np.exp(df["RF"]) * df["VBlag"]) - df["UNDERLYING"] * (df["deltaANN"] - df["lag_deltaANN"]), df["VB"])


df["VT"] = df["VS"] + df["VB"] + df["VC"]




#hedging for black & scholes

df["VSBS"] = df["UNDERLYING"] * df["bsdelta"]
df["lag_deltabs"] =  df.bsdelta.shift()
df["VCBS"] = -df["bsprice"]
df["VBBS"] = -df["VSBS"] + df["VCBS"]
df["VBBS"] =df["VBBS"].astype(float, errors = 'raise')
df["VBBSlag"] = df.VBBS.shift()
df["VBBS"] = np.where(df["rank"] > 0, (np.exp(df["RF"]) * df["VBBSlag"]) - df["UNDERLYING"] * (df["deltaANN"] - df["lag_deltaANN"]), df["VB"])
df["VTBS"] = df["VSBS"] + df["VBBS"] + df["VCBS"]






#df = df[df["Moneyness"] > 1.05]
#df = df[df["Moneyness"] > 0.95]
df = df[df["Moneyness"] < 1.00]
grouped_df = df.groupby(['A']).tail(1)

print(grouped_df["VT"].abs().mean(), "ANN")
print(grouped_df["VTBS"].abs().mean(), "BS")

tracking_error_ANN = grouped_df["VT"].abs()
tracking_error_BS = grouped_df["VTBS"].abs()


print(stats.ttest_rel(grouped_df["VT"].abs(),grouped_df["VTBS"].abs()))

#print(stats.ttest_rel(grouped_df["VTBS"].abs(),grouped_df["VT"].abs()))


                                       
                                    
"""
ttest = stats.ttest_ind_from_stats(np.mean(tracking_error_ANN ), 
                                        np.std(tracking_error_ANN),
                                        len(tracking_error_ANN ), 
                                        np.mean(tracking_error_BS),
                                        np.std(tracking_error_BS),
                                        len(tracking_error_BS))
print(ttest)   
"""

x = df["TTM"]
y = df["Moneyness"]
#z = df["deltaANN"]
z = df["bsdelta"]
print(df.columns)

"""
fig = plt.figure()
ax = plt.axes(projection='3d')
ax.plot3D(x, y, z, cmap = 'viridis')
#ax.plot_wireframe(x, y, z,cmap='viridis', edgecolor='none')
ax.set_title('Surface plot')
plt.show()

"""

fig = plt.figure()
 
# syntax for 3-D plotting
ax = plt.axes(projection ='3d')
 
# syntax for plotting
ax.plot_trisurf(x, y, z, cmap ='viridis')
#ax.set_title('')
ax.set_xlabel("TTM")
ax.set_ylabel("S/K")
ax.set_zlabel("Delta")

plt.show()



print(df["deltaANN"].max())




